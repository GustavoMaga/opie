#############################################################################
# Makefile for building: libmultiauthdummyplugin.so.1.0.0
# Generated by qmake (1.05a) (Qt 3.1.2) on: Mon Jun 14 11:00:19 2004
# Project:  dummyplugin.pro
# Template: lib
# Command: $(QMAKE) -o Makefile dummyplugin.pro
#############################################################################

####### Compiler, tools and options

CC       = $(CCACHE) $(DISTCC) gcc
CXX      = $(CCACHE) $(DISTCC) g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe $(CFLAGS_EXTRA) -Wall -W -g -fPIC  -DQT_COMPONENT_DEBUG=2 -DQT_DEBUG -DOPIE_NO_BUILTIN_SHUTDOWN -DUSE_FILE_NOTIFICATION -DOPIE_SOUND_FRAGMENT_SHIFT=16
CXXFLAGS = -pipe $(CFLAGS_EXTRA) -DQWS -fno-exceptions -fno-rtti $(CXXFLAGS_EXTRA) -Wall -W -g -fPIC  -DQT_COMPONENT_DEBUG=2 -DQT_DEBUG -DOPIE_NO_BUILTIN_SHUTDOWN -DUSE_FILE_NOTIFICATION -DOPIE_SOUND_FRAGMENT_SHIFT=16
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/opt/opie/mkspecs/qws/linux-generic-g++ -I. -I$(OPIEDIR)/include -I$(QTDIR)/include -I.moc/$(PLATFORM)/
LINK     = g++
LFLAGS   = $(LFLAGS_EXTRA) -Wl,-rpath-link,$(OPIEDIR)/lib -shared -Wl,-soname,libmultiauthdummyplugin.so.1 -Wl,-rpath,/opt/opie/plugins/security
LIBS     = $(SUBLIBS)  -Wl,-rpath,$(QTDIR)/lib -L$(QTDIR)/lib $(LIBS_EXTRA) -lqpe -lopieui2 -L$(OPIEDIR)/lib -lqte
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
PRO      = dummyplugin.pro
CHK_DIR_EXISTS= 
MKDIR    = 

####### Output directory

OBJECTS_DIR = .obj/$(PLATFORM)/

####### Files

HEADERS = dummyplugin.h \
		dummypluginimpl.h
SOURCES = dummyplugin.cpp \
		dummypluginimpl.cpp
OBJECTS = .obj/$(PLATFORM)/dummyplugin.o \
		.obj/$(PLATFORM)/dummypluginimpl.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = .moc/$(PLATFORM)/moc_dummyplugin.cpp
OBJMOC = .obj/$(PLATFORM)/moc_dummyplugin.o
DIST	   = ../../../gen.pro \
		../../../include.pro \
		dummyplugin.pro
QMAKE_TARGET = multiauthdummyplugin
DESTDIR  = $(OPIEDIR)/plugins/security/
TARGET   = libmultiauthdummyplugin.so.1.0.0
TARGETA	= $(OPIEDIR)/plugins/security/libmultiauthdummyplugin.a
TARGETD	= libmultiauthdummyplugin.so.1.0.0
TARGET0	= libmultiauthdummyplugin.so
TARGET1	= libmultiauthdummyplugin.so.1
TARGET2	= libmultiauthdummyplugin.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(OPIEDIR)/plugins/security/$(TARGET)

$(OPIEDIR)/plugins/security/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) 
	test -d $(OPIEDIR)/plugins/security/ || mkdir -p $(OPIEDIR)/plugins/security/
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) $(OPIEDIR)/plugins/security/$(TARGET)
	-$(DEL_FILE) $(OPIEDIR)/plugins/security/$(TARGET0)
	-$(DEL_FILE) $(OPIEDIR)/plugins/security/$(TARGET1)
	-$(DEL_FILE) $(OPIEDIR)/plugins/security/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) $(OPIEDIR)/plugins/security/



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: dummyplugin.pro  /opt/opie/mkspecs/qws/linux-generic-g++/qmake.conf ../../../gen.pro \
		../../../include.pro
	$(QMAKE) -o Makefile dummyplugin.pro
qmake: 
	@$(QMAKE) -o Makefile dummyplugin.pro

dist: 
	@mkdir -p .obj/$(PLATFORM)/multiauthdummyplugin && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/$(PLATFORM)/multiauthdummyplugin/ && ( cd `dirname .obj/$(PLATFORM)/multiauthdummyplugin` && $(TAR) multiauthdummyplugin.tar multiauthdummyplugin && $(GZIP) multiauthdummyplugin.tar ) && $(MOVE) `dirname .obj/$(PLATFORM)/multiauthdummyplugin`/multiauthdummyplugin.tar.gz . && $(DEL_FILE) -r .obj/$(PLATFORM)/multiauthdummyplugin

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(OPIEDIR)/plugins/security/$(TARGET) $(TARGET)
	-$(DEL_FILE) $(OPIEDIR)/plugins/security/$(TARGET0) $(OPIEDIR)/plugins/security/$(TARGET1) $(OPIEDIR)/plugins/security/$(TARGET2) $(TARGETA)


lupdate:
	lupdate -noobsolete $(PRO)

lrelease:
	lrelease $(PRO)

ipk:
	tmp=`mktemp -d /tmp/ipkg-opie.XXXXXXXXXX` && ( $(MAKE) INSTALL_ROOT="" install && ipkg-build ; rm -rf ; )

opie-lupdate:
	opie-lupdate $(PRO)

opie-lrelease:
	opie-lrelease $(PRO)

messages:
	xgettext -C -n -ktr -kQT_TRANSLATE_NOOP dummyplugin.h dummypluginimpl.h dummyplugin.cpp dummypluginimpl.cpp -o '$(OPIEDIR)/messages-$(QMAKE_TARGET)-tr.po' && xgettext -C -n -a dummyplugin.h dummypluginimpl.h dummyplugin.cpp dummypluginimpl.cpp -o '$(OPIEDIR)/messages-$(QMAKE_TARGET)-allstrings.po'

FORCE:

####### Compile

.obj/$(PLATFORM)/dummyplugin.o: dummyplugin.cpp dummyplugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/$(PLATFORM)/dummyplugin.o dummyplugin.cpp

.obj/$(PLATFORM)/dummypluginimpl.o: dummypluginimpl.cpp dummypluginimpl.h \
		dummyplugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/$(PLATFORM)/dummypluginimpl.o dummypluginimpl.cpp

.obj/$(PLATFORM)/moc_dummyplugin.o: .moc/$(PLATFORM)/moc_dummyplugin.cpp dummyplugin.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/$(PLATFORM)/moc_dummyplugin.o .moc/$(PLATFORM)/moc_dummyplugin.cpp

.moc/x86-linux/moc_dummyplugin.cpp: $(MOC) dummyplugin.h
	$(MOC) dummyplugin.h -o .moc/x86-linux/moc_dummyplugin.cpp

####### Install

install_target: 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)$(OPIEDIR)/lib/" || $(MKDIR) "$(INSTALL_ROOT)$(OPIEDIR)/lib/"
	-$(COPY) "$(OPIEDIR)/plugins/security/$(TARGET)" "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET2)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET0)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET1)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(OPIEDIR)/lib/$(TARGET2)"
	-$(DEL_DIR) "$(INSTALL_ROOT)$(OPIEDIR)/lib/"


install: all install_target 

uninstall: uninstall_target 


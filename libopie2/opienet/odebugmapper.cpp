
/*
 * debug value mapper - generated by regen.py - (C) Michael 'Mickey' Lauer <mickey@vanille.de>
 */

#include <opie2/odebug.h>

#include "odebugmapper.h"

using namespace Opie::Core;

namespace Opie {
namespace Net  {
namespace Internal {

DebugMapper::DebugMapper()
{
    odebug << "DebugMapper::DebugMapper()" << oendl;


    _map.insert( 0x8902, new QString("SIOCSPGRP") );
    _map.insert( 0x8904, new QString("SIOCGPGRP") );
    _map.insert( 0x8905, new QString("SIOCATMARK") );
    _map.insert( 0x8906, new QString("SIOCGSTAMP") );
    _map.insert( 0x890B, new QString("SIOCADDRT") );
    _map.insert( 0x890C, new QString("SIOCDELRT") );
    _map.insert( 0x890D, new QString("SIOCRTMSG") );
    _map.insert( 0x8910, new QString("SIOCGIFNAME") );
    _map.insert( 0x8911, new QString("SIOCSIFLINK") );
    _map.insert( 0x8912, new QString("SIOCGIFCONF") );
    _map.insert( 0x8913, new QString("SIOCGIFFLAGS") );
    _map.insert( 0x8914, new QString("SIOCSIFFLAGS") );
    _map.insert( 0x8915, new QString("SIOCGIFADDR") );
    _map.insert( 0x8916, new QString("SIOCSIFADDR") );
    _map.insert( 0x8917, new QString("SIOCGIFDSTADDR") );
    _map.insert( 0x8918, new QString("SIOCSIFDSTADDR") );
    _map.insert( 0x8919, new QString("SIOCGIFBRDADDR") );
    _map.insert( 0x891a, new QString("SIOCSIFBRDADDR") );
    _map.insert( 0x891b, new QString("SIOCGIFNETMASK") );
    _map.insert( 0x891c, new QString("SIOCSIFNETMASK") );
    _map.insert( 0x891d, new QString("SIOCGIFMETRIC") );
    _map.insert( 0x891e, new QString("SIOCSIFMETRIC") );
    _map.insert( 0x891f, new QString("SIOCGIFMEM") );
    _map.insert( 0x8920, new QString("SIOCSIFMEM") );
    _map.insert( 0x8921, new QString("SIOCGIFMTU") );
    _map.insert( 0x8922, new QString("SIOCSIFMTU") );
    _map.insert( 0x8923, new QString("SIOCSIFNAME") );
    _map.insert( 0x8924, new QString("SIOCSIFHWADDR") );
    _map.insert( 0x8925, new QString("SIOCGIFENCAP") );
    _map.insert( 0x8926, new QString("SIOCSIFENCAP") );
    _map.insert( 0x8927, new QString("SIOCGIFHWADDR") );
    _map.insert( 0x8929, new QString("SIOCGIFSLAVE") );
    _map.insert( 0x8930, new QString("SIOCSIFSLAVE") );
    _map.insert( 0x8931, new QString("SIOCADDMULTI") );
    _map.insert( 0x8932, new QString("SIOCDELMULTI") );
    _map.insert( 0x8933, new QString("SIOCGIFINDEX") );
    _map.insert( 0x8934, new QString("SIOCSIFPFLAGS") );
    _map.insert( 0x8935, new QString("SIOCGIFPFLAGS") );
    _map.insert( 0x8936, new QString("SIOCDIFADDR") );
    _map.insert( 0x8937, new QString("SIOCSIFHWBROADCAST") );
    _map.insert( 0x8938, new QString("SIOCGIFCOUNT") );
    _map.insert( 0x8940, new QString("SIOCGIFBR") );
    _map.insert( 0x8941, new QString("SIOCSIFBR") );
    _map.insert( 0x8942, new QString("SIOCGIFTXQLEN") );
    _map.insert( 0x8943, new QString("SIOCSIFTXQLEN") );
    _map.insert( 0x8953, new QString("SIOCDARP") );
    _map.insert( 0x8954, new QString("SIOCGARP") );
    _map.insert( 0x8955, new QString("SIOCSARP") );
    _map.insert( 0x8960, new QString("SIOCDRARP") );
    _map.insert( 0x8961, new QString("SIOCGRARP") );
    _map.insert( 0x8962, new QString("SIOCSRARP") );
    _map.insert( 0x8970, new QString("SIOCGIFMAP") );
    _map.insert( 0x8971, new QString("SIOCSIFMAP") );
    _map.insert( 0x8980, new QString("SIOCADDDLCI") );
    _map.insert( 0x8981, new QString("SIOCDELDLCI") );
    _map.insert( 0x89F0, new QString("SIOCDEVPRIVATE") );
    _map.insert( 0x89E0, new QString("SIOCPROTOPRIVATE") );
    _map.insert( 0x1fff, new QString("SIOCPARM_MASK") );
    _map.insert( 0x00000000, new QString("SIOC_VOID") );
    _map.insert( 0x20000000, new QString("SIOC_OUT") );
    _map.insert( 0x40000000, new QString("SIOC_IN") );
    _map.insert( 0x8B00, new QString("SIOCSIWCOMMIT") );
    _map.insert( 0x8B01, new QString("SIOCGIWNAME") );
    _map.insert( 0x8B02, new QString("SIOCSIWNWID") );
    _map.insert( 0x8B03, new QString("SIOCGIWNWID") );
    _map.insert( 0x8B04, new QString("SIOCSIWFREQ") );
    _map.insert( 0x8B05, new QString("SIOCGIWFREQ") );
    _map.insert( 0x8B06, new QString("SIOCSIWMODE") );
    _map.insert( 0x8B07, new QString("SIOCGIWMODE") );
    _map.insert( 0x8B08, new QString("SIOCSIWSENS") );
    _map.insert( 0x8B09, new QString("SIOCGIWSENS") );
    _map.insert( 0x8B0A, new QString("SIOCSIWRANGE") );
    _map.insert( 0x8B0B, new QString("SIOCGIWRANGE") );
    _map.insert( 0x8B0C, new QString("SIOCSIWPRIV") );
    _map.insert( 0x8B0D, new QString("SIOCGIWPRIV") );
    _map.insert( 0x8B0E, new QString("SIOCSIWSTATS") );
    _map.insert( 0x8B0F, new QString("SIOCGIWSTATS") );
    _map.insert( 0x8B10, new QString("SIOCSIWSPY") );
    _map.insert( 0x8B11, new QString("SIOCGIWSPY") );
    _map.insert( 0x8B14, new QString("SIOCSIWAP") );
    _map.insert( 0x8B15, new QString("SIOCGIWAP") );
    _map.insert( 0x8B17, new QString("SIOCGIWAPLIST") );
    _map.insert( 0x8B18, new QString("SIOCSIWSCAN") );
    _map.insert( 0x8B19, new QString("SIOCGIWSCAN") );
    _map.insert( 0x8B1A, new QString("SIOCSIWESSID") );
    _map.insert( 0x8B1B, new QString("SIOCGIWESSID") );
    _map.insert( 0x8B1C, new QString("SIOCSIWNICKN") );
    _map.insert( 0x8B1D, new QString("SIOCGIWNICKN") );
    _map.insert( 0x8B20, new QString("SIOCSIWRATE") );
    _map.insert( 0x8B21, new QString("SIOCGIWRATE") );
    _map.insert( 0x8B22, new QString("SIOCSIWRTS") );
    _map.insert( 0x8B23, new QString("SIOCGIWRTS") );
    _map.insert( 0x8B24, new QString("SIOCSIWFRAG") );
    _map.insert( 0x8B25, new QString("SIOCGIWFRAG") );
    _map.insert( 0x8B26, new QString("SIOCSIWTXPOW") );
    _map.insert( 0x8B27, new QString("SIOCGIWTXPOW") );
    _map.insert( 0x8B28, new QString("SIOCSIWRETRY") );
    _map.insert( 0x8B29, new QString("SIOCGIWRETRY") );
    _map.insert( 0x8B2A, new QString("SIOCSIWENCODE") );
    _map.insert( 0x8B2B, new QString("SIOCGIWENCODE") );
    _map.insert( 0x8B2C, new QString("SIOCSIWPOWER") );
    _map.insert( 0x8B2D, new QString("SIOCGIWPOWER") );
    _map.insert( 0x8BE0, new QString("SIOCIWFIRSTPRIV") );
    _map.insert( 0x8BFF, new QString("SIOCIWLASTPRIV") );
    _map.insert( 0x8B00, new QString("SIOCIWFIRST") );
    _map.insert( 0x5000, new QString("SIOCGBPQETHPARAM") );
    _map.insert( 0x5001, new QString("SIOCSBPQETHPARAM") );
    _map.insert( 0x890B, new QString("SIOCADDRT") );
    _map.insert( 0x890C, new QString("SIOCDELRT") );
    _map.insert( 0x890D, new QString("SIOCRTMSG") );
    _map.insert( 0x8910, new QString("SIOCGIFNAME") );
    _map.insert( 0x8911, new QString("SIOCSIFLINK") );
    _map.insert( 0x8912, new QString("SIOCGIFCONF") );
    _map.insert( 0x8913, new QString("SIOCGIFFLAGS") );
    _map.insert( 0x8914, new QString("SIOCSIFFLAGS") );
    _map.insert( 0x8915, new QString("SIOCGIFADDR") );
    _map.insert( 0x8916, new QString("SIOCSIFADDR") );
    _map.insert( 0x8917, new QString("SIOCGIFDSTADDR") );
    _map.insert( 0x8918, new QString("SIOCSIFDSTADDR") );
    _map.insert( 0x8919, new QString("SIOCGIFBRDADDR") );
    _map.insert( 0x891a, new QString("SIOCSIFBRDADDR") );
    _map.insert( 0x891b, new QString("SIOCGIFNETMASK") );
    _map.insert( 0x891c, new QString("SIOCSIFNETMASK") );
    _map.insert( 0x891d, new QString("SIOCGIFMETRIC") );
    _map.insert( 0x891e, new QString("SIOCSIFMETRIC") );
    _map.insert( 0x891f, new QString("SIOCGIFMEM") );
    _map.insert( 0x8920, new QString("SIOCSIFMEM") );
    _map.insert( 0x8921, new QString("SIOCGIFMTU") );
    _map.insert( 0x8922, new QString("SIOCSIFMTU") );
    _map.insert( 0x8923, new QString("SIOCSIFNAME") );
    _map.insert( 0x8924, new QString("SIOCSIFHWADDR") );
    _map.insert( 0x8925, new QString("SIOCGIFENCAP") );
    _map.insert( 0x8926, new QString("SIOCSIFENCAP") );
    _map.insert( 0x8927, new QString("SIOCGIFHWADDR") );
    _map.insert( 0x8929, new QString("SIOCGIFSLAVE") );
    _map.insert( 0x8930, new QString("SIOCSIFSLAVE") );
    _map.insert( 0x8931, new QString("SIOCADDMULTI") );
    _map.insert( 0x8932, new QString("SIOCDELMULTI") );
    _map.insert( 0x8933, new QString("SIOCGIFINDEX") );
    _map.insert( 0x8934, new QString("SIOCSIFPFLAGS") );
    _map.insert( 0x8935, new QString("SIOCGIFPFLAGS") );
    _map.insert( 0x8936, new QString("SIOCDIFADDR") );
    _map.insert( 0x8937, new QString("SIOCSIFHWBROADCAST") );
    _map.insert( 0x8938, new QString("SIOCGIFCOUNT") );
    _map.insert( 0x8940, new QString("SIOCGIFBR") );
    _map.insert( 0x8941, new QString("SIOCSIFBR") );
    _map.insert( 0x8942, new QString("SIOCGIFTXQLEN") );
    _map.insert( 0x8943, new QString("SIOCSIFTXQLEN") );
    _map.insert( 0x8944, new QString("SIOCGIFDIVERT") );
    _map.insert( 0x8945, new QString("SIOCSIFDIVERT") );
    _map.insert( 0x8946, new QString("SIOCETHTOOL") );
    _map.insert( 0x8947, new QString("SIOCGMIIPHY") );
    _map.insert( 0x8948, new QString("SIOCGMIIREG") );
    _map.insert( 0x8949, new QString("SIOCSMIIREG") );
    _map.insert( 0x894A, new QString("SIOCWANDEV") );
    _map.insert( 0x8953, new QString("SIOCDARP") );
    _map.insert( 0x8954, new QString("SIOCGARP") );
    _map.insert( 0x8955, new QString("SIOCSARP") );
    _map.insert( 0x8960, new QString("SIOCDRARP") );
    _map.insert( 0x8961, new QString("SIOCGRARP") );
    _map.insert( 0x8962, new QString("SIOCSRARP") );
    _map.insert( 0x8970, new QString("SIOCGIFMAP") );
    _map.insert( 0x8971, new QString("SIOCSIFMAP") );
    _map.insert( 0x8980, new QString("SIOCADDDLCI") );
    _map.insert( 0x8981, new QString("SIOCDELDLCI") );
    _map.insert( 0x8982, new QString("SIOCGIFVLAN") );
    _map.insert( 0x8983, new QString("SIOCSIFVLAN") );
    _map.insert( 0x8990, new QString("SIOCBONDENSLAVE") );
    _map.insert( 0x8991, new QString("SIOCBONDRELEASE") );
    _map.insert( 0x8992, new QString("SIOCBONDSETHWADDR") );
    _map.insert( 0x8993, new QString("SIOCBONDSLAVEINFOQUERY") );
    _map.insert( 0x8994, new QString("SIOCBONDINFOQUERY") );
    _map.insert( 0x8995, new QString("SIOCBONDCHANGEACTIVE") );
    _map.insert( 0x89F0, new QString("SIOCDEVPRIVATE") );
    _map.insert( 0x89E0, new QString("SIOCPROTOPRIVATE") );

};


DebugMapper::~DebugMapper()
{
    odebug << "DebugMapper::~DebugMapper()" << oendl;
}


const QString& DebugMapper::map( int value ) const
{
    QString* result = _map[ value ];

    if ( !result )
    {
        owarn << "DebugMapper::map() - value " << value << " is not found." << oendl;
        return QString::null;
    }
    else
    {
        return *result;
    }
}

}
}
}
